Name,Description,Type,Default,Unit
`sample_rate`,The rate at which sensors are polled during a run. **Do not use values below 0.2.** Default value is recommended.,float,0.2,s
`logging_rate`,The rate at which sensor data is written to a new log line in the log file during a run. **Do not use values below 1.** Default value is recommended.,float,1,s
`low_power_threshold`,"The battery charge percentage below which the unit will enter a non-operational, low-power mode and will not start a new run.",uint16,46,%
`recovery_power_threshold`,"The battery charge percentage above which the unit will return to an operational mode from a non-operational, low-power mode.",uint16,47,%
`sample_valid_timeout_s`,"The duration for which a sample is considered valid after a run while the sample is not removed (i.e., the lid is not opened), after which the unit will alert.",float,3600,s
`alert_timeout_time_s`,The duration of an alert condition.,float,3,s
`debug_to_com_en`,The enable for sending all debug messages from the unit to the serial COM port.,bools,TRUE,-
`min_run_zone_temp_en`,"The enable for checking the minimum heater board (""run zone"") temperature before a run.",bools,FALSE,-
`min_run_zone_temp`,"If enabled, the minimum heater board (""run zone"") temperature required to start a run.",float,80,°C
`do_automatic_runs`,"The enable for lifetime or other burn-in tests. **Normal operation shuld be FALSE.** If set to true, unit will run automatically without user intervention (regardless of sample removal or insertion), pausing for 2×`sample_valid_timeout_s` seconds between runs.",bools,FALSE,-
`accept_run_time_error_s`,"The acceptable timing error for each cycle, as well as the entire run. Time is measured and compared using real-time clock (RTC) as well as cpu-ticks. If the time difference between these two exceeds this value, then an error occurs, the run exits, and the unit notifies the user that the sample is now invalid (red lights). This condition is checked during each cycle, as well as at the conclusion of the entire run (all cycles were completed).",float,30,s
`heater_max_temp`,"The maximum heater board temperature allowed, beyond which the unit will alert.",float,120,°C
`max_heater_pid_pwm`,The maximum PWM allowed to be set by the heater PID controller.,float,100,
`switch_motor_ccw_cw`,"The enable for switching the polarity of the motor in alternating runs, which reduces directional wear in the drive shaft.",bools,TRUE,-
`hal_sensor_thresh`,"The threshold for the Hall effect sensor, which detects the open/close state of the lid.",float,0.3,
`motor_stall_percent`,"The percent change in the motor RPM used to detect a stalled motor, above which the unit will alert.  The motor setpoint must be reached before this setting takes effect.",int,20,% (of RPM)
`motor_stall_pwm`,"The maximum motor PWM control signal that will be allowed. If exceeded, an error will occur. **Not disabled by`motor_stall_en` and is always active regardless of the `motor_stall_en` setting.**",float,65,% (PWM)
`motor_stall_en`,"The enable for `motor_stall_percent`, which checks for a motor stall condition during a run.",bools,TRUE,-
`canary`,The value that signals the default config values have been restored.,uint16,747,-
`mmddyy`,"If enabled, the date to write to the real-time clock.",int,100124,mmddyy
`hhmmss`,"If enabled, the time to write to the real-time clock.",int,120000,hhmmss
`set_time_date`,The enable to set the real-time clock when the device goes back into normal operation mode.,bools,FALSE,-
